15/03/25
------------
Constructors
------------------

->WHAT IS CONSTRUCTOR :- Constructors are the special methods having same name as that of class name and does not have any return type

-> EXAMPLE :-

	class Animal 
	{
		Animal()
		{

		}
	}
-> USE OF CONSTRUCTOR :- Constructors are used to initialize an object but not for object creation

-> WHEN CONSTRUCTORS ARE EXECUTED :- Constructors are executed exactly at the time of object creation, not before or after object creation

->HOW CONSTRUCTORS ARE EXECUTED :- Constructors are executed automatically when we create an object

-> SYNTAX :- 
	access-modifiers ClassName ( list of parameters ) throws Exception1, Exception2, --
	{
		//initialization code
	}

-> We can use any access-modifiers for the constructors i.e public, protected, private or default. This is done to control the object creation

-> We cannot use abstract, final, static, synchronized etc keywords with constructors

-> TYPES OF CONSTRUCTORS :- There are three types of constructors :-
	1. Default Constructors (Compiler)
	2. 0-Argument Constructors (Programmer)
	3. Parametrized Constructors (Programmer)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1. Default Constructors :-
	-> Whenever we don't create any constructor in class, then compiler will always create a constructor which is known as default constructor.
	-> Default constructors are used to provide the default values to the objects like 0, null etc depending on the type.
	-> Note : If programmer create any one constructor then compiler will not generate default constructor
	-> Prototype of default constructor :- 
		1. Access modifier of default constructor will be same as that of class access-modifier
		2. Access-modifier of default constructor cannot be private or protected because outer class cannot be private or protected
		3. Default constructor has only one line of code i.e. super();
			class Test
			{
				Test()
				{
					super();
				}
			}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. 0-Argument Constructors :-
	-> These constructors are created by the programmer
		class Test
		{
			Test ()
			{

			}
		}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3. Parameterized Constructors :-
	-> These constructors are created by the programmer
		class Test
		{
			Test (int a, int b)
			{

			}
		}

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

=> What is difference between method and constructor ?
	1. Method always have return type
	    Constructors does not have any return type even void
	
	2. Methods can have any valid name 
	    Constructors always have same name as that of class name

	3. Methods are used to perform any particular tasks
	    Constructors are always used to initialize an object

	4. We have to call the methods explicitly by using object name or class name
	     Constructors are called automatically when we create an object

	5. If we don't create any method then compiler will not generate any method
	    If we don't create any constructors then compiler will generate default constructor

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

=> Topics related to constructor :- 
	1. Constructors with inheritance
	2. Constructors overloading and overriding 
	3. Constructors chaining (using this keyword)
	4. Use of super keyword with constructor
	5. Constructors with abstract class & interface
	6. Constructors with exception handling 
	7. Copy constructor

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

=> Note :-
	-> Constructor is predefined class present in java.lang.reflect package
	-> This Constructor class is used to get constructor related information

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




