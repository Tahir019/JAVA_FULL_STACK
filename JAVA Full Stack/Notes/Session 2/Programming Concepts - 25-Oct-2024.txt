Date:25/Oct/2024
----------------
Programming Concepts
--------------------
Program
-------
- A program is a set of instructions given to a computer to perform a specific task or solve a problem.
- It is written in a programming language that the computer can understand and execute.

Comments
--------
- Comments are used to document a program and ignored by the programming language

	Types of comments
	-----------------
	- Single line comments => //
	- Multiline comments => /* ... */

	Ex:
		//to find area of a circle

	Ex:
		/*
			to add a product
			into the shopping cart
		*/

Keyword
-------
- A keyword is a reserved word with a predefined meaning in a programming language.
- Keywords cannot be used as variable names, function names, or identifiers.

	Examples of Keywords:
		Control Flow: if, else, switch, while, do, for
		Data Types: int, float, char, void
		Access Modifiers: public, private, protected
		Other: class, return, new, try, catch


Variable
--------
- A variable is an identifier which allocates some memory space to hold the data

	Ex:
		studentName
		customer_address
		employeeSalary
		itemName


Data Type
---------
- Type of data the variable holds is called as data type
//The data type defines the type of value a variable can store.

	Common Data Types:

		1. Primitive Data Types:
			int: Integer numbers (e.g., 10, -5).
			float: Decimal numbers (e.g., 3.14, -2.71).
			char: Single character (e.g., 'A', '9').
			bool: Boolean values (true or false).

		11. Non-Primitive Data Types:
			String: Sequence of characters (e.g., "Hello").
			Array: Collection of elements of the same type.

Declaration of Variable
-----------------------
In order to allocate memory space for variable we need to declare the variable

syntax (Rules of a language)
------
datatype var1, var2, ..., varn;


Ex:
	int a,b;
	char c;
	float f;


Method/Function
---------------
- A method or function is a reusable block of code that performs a specific task.

Ex:

	//Defining the method
	float areaCircle(int radius)  //radius is called as argument/parameter
	{
  	   float PI = 3.14;
	   float area = PI * radius * radius;
	   return area;
	}

	
	//calling the method
	float area = areaCircle(5);
	print(area);  //78.5

	The return type of areaCircle() method is float


	void areaCircle(int radius)  //radius is called as argument/parameter
	{
  	   float PI = 3.14;
	   float area = PI * radius * radius;
	   print(area);
	}


	void means no return type


	Ex:
		void printMessage(String msg)
		{
			print(msg);
                }

		printMessage("Hello");



	Ex:
		int calculateTotal(int mark1, int mark2, int mark3)
		{
		   int total;
		   total = mark1 + mark2 + mark3;
		   return total;
		}


Advantages:
 1. Code Reusability: Write once, use multiple times.
 2. Improved Readability: Break down complex logic into smaller functions.
 3. Easier Debugging: Isolate issues in specific functions.










































































